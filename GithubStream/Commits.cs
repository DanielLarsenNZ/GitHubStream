//// Generated by https://quicktype.io

//namespace GithubStream
//{
//    using System;
//    using System.Collections.Generic;

//    using System.Globalization;
//    using Newtonsoft.Json;
//    using Newtonsoft.Json.Converters;

//    public partial class Commits
//    {
//        [JsonProperty("sha")]
//        public string Sha { get; set; }

//        [JsonProperty("node_id")]
//        public string NodeId { get; set; }

//        [JsonProperty("commit")]
//        public Commit Commit { get; set; }

//        [JsonProperty("url")]
//        public Uri Url { get; set; }

//        [JsonProperty("html_url")]
//        public Uri HtmlUrl { get; set; }

//        [JsonProperty("comments_url")]
//        public Uri CommentsUrl { get; set; }

//        [JsonProperty("author")]
//        public PurpleAuthor Author { get; set; }

//        [JsonProperty("committer")]
//        public PurpleAuthor Committer { get; set; }

//        [JsonProperty("parents")]
//        public Parent[] Parents { get; set; }
//    }

//    public partial class PurpleAuthor
//    {
//        [JsonProperty("login")]
//        public string Login { get; set; }

//        [JsonProperty("id")]
//        public long Id { get; set; }

//        [JsonProperty("node_id")]
//        public string NodeId { get; set; }

//        [JsonProperty("avatar_url")]
//        public Uri AvatarUrl { get; set; }

//        [JsonProperty("gravatar_id")]
//        public string GravatarId { get; set; }

//        [JsonProperty("url")]
//        public Uri Url { get; set; }

//        [JsonProperty("html_url")]
//        public Uri HtmlUrl { get; set; }

//        [JsonProperty("followers_url")]
//        public Uri FollowersUrl { get; set; }

//        [JsonProperty("following_url")]
//        public string FollowingUrl { get; set; }

//        [JsonProperty("gists_url")]
//        public string GistsUrl { get; set; }

//        [JsonProperty("starred_url")]
//        public string StarredUrl { get; set; }

//        [JsonProperty("subscriptions_url")]
//        public Uri SubscriptionsUrl { get; set; }

//        [JsonProperty("organizations_url")]
//        public Uri OrganizationsUrl { get; set; }

//        [JsonProperty("repos_url")]
//        public Uri ReposUrl { get; set; }

//        [JsonProperty("events_url")]
//        public string EventsUrl { get; set; }

//        [JsonProperty("received_events_url")]
//        public Uri ReceivedEventsUrl { get; set; }

//        [JsonProperty("type")]
//        public TypeEnum Type { get; set; }

//        [JsonProperty("site_admin")]
//        public bool SiteAdmin { get; set; }
//    }

//    public partial class Commit
//    {
//        [JsonProperty("author")]
//        public FluffyAuthor Author { get; set; }

//        [JsonProperty("committer")]
//        public FluffyAuthor Committer { get; set; }

//        [JsonProperty("message")]
//        public string Message { get; set; }

//        [JsonProperty("tree")]
//        public Tree Tree { get; set; }

//        [JsonProperty("url")]
//        public Uri Url { get; set; }

//        [JsonProperty("comment_count")]
//        public long CommentCount { get; set; }

//        [JsonProperty("verification")]
//        public Verification Verification { get; set; }
//    }

//    public partial class FluffyAuthor
//    {
//        [JsonProperty("name")]
//        public string Name { get; set; }

//        [JsonProperty("email")]
//        public string Email { get; set; }

//        [JsonProperty("date")]
//        public DateTimeOffset Date { get; set; }
//    }

//    public partial class Tree
//    {
//        [JsonProperty("sha")]
//        public string Sha { get; set; }

//        [JsonProperty("url")]
//        public Uri Url { get; set; }
//    }

//    public partial class Verification
//    {
//        [JsonProperty("verified")]
//        public bool Verified { get; set; }

//        [JsonProperty("reason")]
//        public Reason Reason { get; set; }

//        [JsonProperty("signature")]
//        public string Signature { get; set; }

//        [JsonProperty("payload")]
//        public string Payload { get; set; }
//    }

//    public partial class Parent
//    {
//        [JsonProperty("sha")]
//        public string Sha { get; set; }

//        [JsonProperty("url")]
//        public Uri Url { get; set; }

//        [JsonProperty("html_url")]
//        public Uri HtmlUrl { get; set; }
//    }

//    public enum TypeEnum { User };

//    public enum Reason { Unsigned, Valid };

//    public partial class Commits
//    {
//        public static Commits[] FromJson(string json) => JsonConvert.DeserializeObject<Commits[]>(json, Converter.Settings);
//    }

//    public static class Serialize
//    {
//        public static string ToJson(this Commits[] self) => JsonConvert.SerializeObject(self, Converter.Settings);
//    }

//    internal static class Converter
//    {
//        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
//        {
//            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
//            DateParseHandling = DateParseHandling.None,
//            Converters = {
//                TypeEnumConverter.Singleton,
//                ReasonConverter.Singleton,
//                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
//            },
//        };
//    }

//    internal class TypeEnumConverter : JsonConverter
//    {
//        public override bool CanConvert(Type t) => t == typeof(TypeEnum) || t == typeof(TypeEnum?);

//        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
//        {
//            if (reader.TokenType == JsonToken.Null) return null;
//            var value = serializer.Deserialize<string>(reader);
//            if (value == "User")
//            {
//                return TypeEnum.User;
//            }
//            throw new Exception("Cannot unmarshal type TypeEnum");
//        }

//        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
//        {
//            if (untypedValue == null)
//            {
//                serializer.Serialize(writer, null);
//                return;
//            }
//            var value = (TypeEnum)untypedValue;
//            if (value == TypeEnum.User)
//            {
//                serializer.Serialize(writer, "User");
//                return;
//            }
//            throw new Exception("Cannot marshal type TypeEnum");
//        }

//        public static readonly TypeEnumConverter Singleton = new TypeEnumConverter();
//    }

//    internal class ReasonConverter : JsonConverter
//    {
//        public override bool CanConvert(Type t) => t == typeof(Reason) || t == typeof(Reason?);

//        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
//        {
//            if (reader.TokenType == JsonToken.Null) return null;
//            var value = serializer.Deserialize<string>(reader);
//            switch (value)
//            {
//                case "unsigned":
//                    return Reason.Unsigned;
//                case "valid":
//                    return Reason.Valid;
//            }
//            throw new Exception("Cannot unmarshal type Reason");
//        }

//        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
//        {
//            if (untypedValue == null)
//            {
//                serializer.Serialize(writer, null);
//                return;
//            }
//            var value = (Reason)untypedValue;
//            switch (value)
//            {
//                case Reason.Unsigned:
//                    serializer.Serialize(writer, "unsigned");
//                    return;
//                case Reason.Valid:
//                    serializer.Serialize(writer, "valid");
//                    return;
//            }
//            throw new Exception("Cannot marshal type Reason");
//        }

//        public static readonly ReasonConverter Singleton = new ReasonConverter();
//    }
//}
